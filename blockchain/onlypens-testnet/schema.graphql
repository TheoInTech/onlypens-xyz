type DeliverableApproved @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  writer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeliverableCreated @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  contentType: String! # string
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeliverableRejected @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  writer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeliverableRevised @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  writer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeliverableSubmitted @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  writer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GhostwriterInvited @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  ghostwriter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GigPackageCancelled @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GigPackageCompleted @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GigPackageCreated @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  creator: Bytes! # address
  amount: BigInt! # uint256
  expiresAt: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GigPackageExpired @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InvitationAccepted @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  ghostwriter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InvitationDeclined @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  ghostwriter: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaymentReleased @entity(immutable: true) {
  id: Bytes!
  packageId: BigInt! # uint256
  deliverableId: BigInt! # uint256
  to: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
